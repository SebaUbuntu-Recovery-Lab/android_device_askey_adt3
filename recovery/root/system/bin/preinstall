#!/system/bin/sh

#!/system/bin/sh
LOGTEXT=/data/local/tmp/log_test_new.txt
FLAG_FILE="/data/local/tmp/preinstalled"
TEP_FLAG_FILE="/data/local/tmp/tmp_preinstalled"
TMP_APK_FILE="/data/local/tmp/preinstall.apk"
OEM_FILE="/oem/delete.txt"
apks=$(find /system/preinstall /vendor/preinstall /product/preinstall /oem/preinstall -name *.apk 2> /dev/null)

if [ ! -e $LOGTEXT ]; then
    appops set --uid com.android.qhqlauncher MANAGE_EXTERNAL_STORAGE allow
    /system/bin/pm install -r /vendor/preinstall/com.google.android.katniss.apk
    settings put global device_provisioned 1
    settings put global heads_up_notifications_enabled 0
    settings put global show_notification_channel_warnings 0
    settings put system pointer_speed 2
    settings put system sound_effects_enabled 0
    settings put global captive_portal_mode 0
    #modify com.softwinner.TvdFileManager permission
    settings put global verifier_verify_adb_installs 0
    settings put global package_verifier_enable 0
    pm grant com.softwinner.TvdFileManager android.permission.READ_EXTERNAL_STORAGE
    pm grant com.softwinner.TvdFileManager android.permission.WRITE_EXTERNAL_STORAGE
    #modify product_test permission
    pm grant com.example.a android.permission.READ_EXTERNAL_STORAGE
    pm grant com.example.a android.permission.WRITE_EXTERNAL_STORAGE

function is_skip_install(){
    if [ ! -f "$OEM_FILE" ]; then
        return 0
    else
        cat $OEM_FILE | while read line
        do
            if [[ $1 == *$line* ]]; then
                return 1
            fi
        done
    fi
    return 0
}

if [ ! -z "$apks" ]; then
    if [ ! -f $FLAG_FILE ]; then
        touch $FLAG_FILE
    else
        awk '!a[$0]++' $FLAG_FILE > $TEP_FLAG_FILE
        mv $TEP_FLAG_FILE $FLAG_FILE
    fi
    for apk in $apks; do
        result=$(grep "$apk" $FLAG_FILE)
        echo "search result: $result"
        if [ -z $result ]; then
            is_skip_install $apk
            if [ $? -eq 1 ]; then
                echo "skip install this apk: $apk"
                rm &TMP_APK_FILE
                continue
            fi
            cp "$apk" $TMP_APK_FILE
            cmd package install $TMP_APK_FILE
            rm $TMP_APK_FILE
            echo $apk >> $FLAG_FILE
        fi
    done
    #settings put secure assistant com.google.android.googlequicksearchbox/com.google.android.voiceinteraction.GsaVoiceInteractionService
    #settings put secure voice_interaction_service com.google.android.googlequicksearchbox/com.google.android.voiceinteraction.GsaVoiceInteractionService
    #pm grant com.google.android.googlequicksearchbox android.permission.RECORD_AUDIO
fi

    touch $LOGTEXT
    echo "OK, installation complete." >> /data/local/tmp/log_test.txt
fi
